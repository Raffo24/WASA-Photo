openapi: 3.0.3
info:
  title: WASAphoto
  description: |-
    This is the API documentation for the WASAphoto application
  version: "3.0"
  contact:
    name: Raffaele Ruggeri
servers :
  - url: http://localhost:3000
    description: Development server
paths:
  /session:
    post:
      tags:
      - user_management
      summary: Login
      description: If the user not exist,
          it will be created and
          an identification token will be returned
          if the user exist, the user identifier will be returned
      operationId: doLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_name"
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '200':
          description: login effettuato
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mini_user_object"
              examples:
                OK:
                  value:
                    id: 1
        '201':
          description: utente creato
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mini_user_object"
              examples:
                OK:
                  value:
                    id: 1
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: "Id non valido"
  /photos:
    post:
      tags:
      - photos
      summary: Upload photo
      description: Upload a new photo
      operationId: uploadPhoto
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/photo_object"
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '201':
          description: upload effettuato
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/photo_object_extended"
              examples:
                photo:
                  value:
                    photo:
                      comments: 0
                      created_at: 2023-05-23T18:36:02Z
                      description: hey
                      id: 29
                      liked: false
                      likes: 0
                      photo_url: service/api/images/1_1684866962.jpg
                      title: ciaoo
                      user_id: 1
                      user_name: ''
        '400':
          description: errore upload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: "Id non valido"
  /photos/{id}/comments:
    parameters:
      - name: id
        in: path
        description: id of the photo that needs to be fetched
        schema:
          type: integer
        required: true
    get:
      tags:
        - photos
      summary: Get photo comments
      description: Get comments for a photo
      operationId: get_photo_comments
      security:
        - BearerAuth: []
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '200':
          description: commento inserito
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/comments"
              examples:
                OK:
                  value:
                    array_of_comments:
                    - content: ma che bella foto!
                      created_at: 2023-05-21T13:38:50Z
                      id: 3
                      photo_id: 1
                      user_id: 1
                      user_name: Raffaele
                    - content: ciao
                      created_at: 2023-05-21T22:02:19Z
                      id: 10
                      photo_id: 1
                      user_id: 1
                      user_name: Raffaele
        '400':
          description: Bad_Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: "id non valido"
    post:
      tags:
      - photos
      summary: Post photo Comment
      description: Post a comment for a photo
      operationId: commentPhoto
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref : "#/components/schemas/mini_comment_object"
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '201':
          description: commento inserito
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/comment_object"
              examples:
                OK:
                  value:
                    content: ciao
                    created_at: 2023-05-21T22:02:19Z
                    id: 10
                    photo_id: 1
                    user_id: 1
                    user_name: Raffaele
        '400':
          description: Bad_Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: "id foto non valido"

  /users/{id}/follow/{followid}:
    parameters:
      - name: id
        in: path
        description: id of the user that needs to be followed
        schema:
          type: integer
        required: true
      - name: followid
        in: path
        description: id of the user that needs to be followed
        schema:
          type: integer
        required: true
    put:
      tags:
      - social_network
      summary: Follow User
      description: Follow a user
      operationId: followUser
      security:
        - BearerAuth: []
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '201':
          description: utente seguito
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/follow_object"
              examples:
                OK:
                  value:
                    follow_object :
                      follower_id: 1
                      following_id: 2
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: Non puoi seguire 2 volte lo stesso utente
        '403':
          description: Fobidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: Non puoi seguire utilizzando un altro utente
    delete:
      tags:
        - social_network
      summary: Unfollow User
      description: Unfollow a user
      operationId: unfollowUser
      security:
        - BearerAuth: []
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '200':
          description: utente con id {id} non segue più l'utente con id {followid}
          content:
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                OK:
                  value:
                    status: DELETED
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: id non valido
        '403':
          description: Fobidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: Non puoi smettere di seguire da un account che non ti appartiene
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: Non puoi smettere di seguire un utente che non esiste

  /photos/{id}/like/{user_id}:
    parameters:
      - name: id
        in: path
        description: id of the photo that needs to be liked
        schema:
          type: integer
        required: true
      - name: user_id
        in: path
        description: id of the user that needs to like the photo
        schema:
          type: integer
        required: true
    put:
      tags:
        - photos
      summary: Like photo
      description: Like a photo
      operationId: likePhoto
      security:
        - BearerAuth: []
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '201':
          description: like inserito
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/like_object"
              examples:
                OK:
                  value:
                    like_object:
                      photo_id: 29
                      user_id: 1
                    
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: Non puoi mettere like 2 volte alla stessa foto
    delete:
      tags:
        - photos
      summary: Unlike photo
      description: Unlike a photo
      operationId: unlikePhoto
      security:
        - BearerAuth: []
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '200':
          description: l'utente con id {user_id} ha tolto il like alla foto con id {id}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: DELETED
        '403':
          description: Fobidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: Non puoi levare un like che non hai messo tu
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: Non puoi levare un like da una foto che non esiste
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: id non valido
  /users/{id}/followers:
    parameters:
      - name: id
        in: path
        description: id of the user that needs to be fetched
        schema:
          type: integer
        required: true
    get:
      tags:
      - social_network
      summary: Get User followers
      description: Get a user followers
      operationId: get_user_followers
      security:
        - BearerAuth: []
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '200':
          description: utenti che seguono l'utente scelto
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mini_user_object"
              examples:
                OK:
                  value:
                    mini_user_object:
                      - id: 1
                        user_name: Raffaele
        '400':
          description: Bad_Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: id non valido
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: Non esiste nessun utente con questo id
  /users/{id}/following:
    parameters:
      - name: id
        in: path
        description: id of the user that needs to be fetched
        schema:
          type: integer
        required: true
    get:
      tags:
        - social_network
      summary: Get User following
      description: Get a user following
      operationId: get_user_following
      security:
        - BearerAuth: []
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '200':
          description: utenti che seguono l'utente scelto
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mini_user_object"
              examples:
                OK:
                  value:
                    mini_user_object:
                      - id: 1
                        user_name: Raffaele
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: utente non presente
  /feed:
    get:
      tags:
      - feed_stream
      summary: Get feed_stream
      description: Get the feed_stream of the user
      operationId: getMyStream
      security:
      - BearerAuth: []
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '200':
          description: /feed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/photo_object"
              examples:
                OK:
                  value:
                    photo_object:
                      - comments: 9
                        created_at: 2023-05-19T11:36:18Z
                        description: Splash
                        id: 1
                        liked: false
                        likes: 1
                        photo_url: service/api/images/2_1684496178.jpg
                        title: Parrot
                        user_id: 2
                        user_name: Raffaele 
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: utente non presente
  /users/{id}:
    parameters:
      - name: id
        in: path
        description: id of the user that needs to be fetched
        schema:
          type: integer
        required: true
    get:
      tags:
        - user_info
      summary: Get User Profile
      description: Get a user profile
      operationId: getUserProfile
      security:
        - BearerAuth: []
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '200':
          description: dati utente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_object"
              examples:
                OK:
                  value:
                    user_object:
                      banned: false
                      followers: 0
                      following: 0
                      id: 4
                      photos: 0
                      user_name: Raffaele
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: id non valido
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: utente non trovato
    put:
      tags:
        - user_info
      summary: Update user_name
      description: Update my user_name
      operationId: setMyUserName
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_name"
            examples:
              user_name:
                value:
                  user_name: Raffaele
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '201':
          description: nome utente modificato
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mini_user_object"
              examples:
                OK:
                  value:
                    mini_user_object:
                    - id: 2
                      user_name: Raffaele
        '400':
          description: Bad_Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: id non valido
        '403':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: Non puoi cambiare il nome di un altro utente
  /users:
    get:
      tags:
      - user_management
      summary: Search User
      description: Search a user by user_name
      operationId: list_username
      security:
        - BearerAuth: []
      parameters:
      - name: query
        description: stringa da cercare
        in: query
        schema:
          type: string
          minLength: 0
          maxLength: 20
          pattern: ^[a-zA-Z0-9_]*$
          example: nome
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '200':
          description: lista utenti con user_name che contiene la stringa passata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/users"
              examples:
                OK:
                  value:
                    users:
                    - banned: false
                      followed: false
                      id: 1
                      user_name: Raffaele
                    - banned: false
                      followed: false
                      id: 3
                      user_name: raffaelea
                    - banned: true
                      followed: false
                      id: 11
                      user_name: pippo
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Bad_Request:
                  value: 
                    status: utente non presente
  /photos/{id}:
    parameters:
      - name: id
        in: path
        description: id of the photo that needs to be fetched
        schema:
          type: integer
        required: true
    get:
      tags:
      - photos
      summary: Get photo
      description: Get a photo
      operationId: get_photo
      security:
      - BearerAuth: []
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '200':
          description: dati foto
          content:
              image/png:
                schema:
                  type: string
                  format: binary
                  description: image in PNG format
                  pattern: "((.|\n)*)"
                  minLength: 1
                  maxLength: 10485760
        '400':
          description: Invalid id supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Bad_Request:
                  value: 
                    status: utente non presente
        '404':
          description: Photo not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Not_Found:
                  value: 
                    status: photo not found
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Forbidden:
                  value: 
                    status: sei stato bannato da chi ha caricato questa foto
    delete:
      tags:
        - photos
      summary: Delete photo
      description: Delete a photo
      operationId: deletePhoto
      security:
        - BearerAuth: []
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '200':
          description: la foto con id {id} è stata eliminata
          content:
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                OK:
                  value: 
                    status: DELETED
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Bad_Request:
                  value: 
                    status : photo not found
        '403':
          description: Fobidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Fobidden:
                  value:
                    status: Non puoi cancellare una foto che non ti appartiene
  /users/{id}/photos:
    parameters:
      - name: id
        in: path
        description: id of the user that needs to be fetched
        schema:
          type: integer
        required: true
    get:
      tags:
        - user_info
      summary: Get User photos
      description: Get a user photos
      operationId: get_user_photos
      security:
        - BearerAuth: []
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '200':
          description: Lista di foto postate dall'utente con id passato
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/photos"
              examples:
                OK:
                  value:
                    array_of_photos:
                    - comments: 2
                      created_at: 2023-05-19T12:34:43Z
                      description: Splash
                      id: 2
                      liked: true
                      likes: 2
                      photo_url: service/api/images/1_1684499683.jpg
                      title: Parrot
                      user_id: 1
                      user_name: Raffaele
                    - comments: 0
                      created_at: 2023-05-22T14:05:02Z
                      description: CyberPunk2077
                      id: 24
                      liked: false
                      likes: 0
                      photo_url: service/api/images/1_1684764302.jpg
                      title: Lucy
                      user_id: 1
                      user_name: Raffaele
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Bad_Request:
                  value:
                    status: id non valido
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Forbidden:
                  value:
                    status: sei stato bannato da questo utente
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Not_Found:
                  value:
                    status: utente non presente
  
  /users/{id}/ban/{banid}:
    parameters:
    - name: id
      in: path
      description: id that wants to ban another user
      schema:
        type: integer
      required: true
    - name: banid
      in: path
      description: id of the user that needs to be banned
      schema:
        type: integer
      required: true
    put:
      tags:
        - social_network
      summary: Ban User
      description: Ban a user
      operationId: banUser
      security:
        - BearerAuth: []
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '200':
          description: utente bannato
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/banner_object"
              examples:
                OK:
                  value:
                    ban_object:
                      banned_id: 3
                      banner_id: 2
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Bad_Request:
                  value: 
                    status: Non puoi bannare 2 volte lo stesso utente
        '403':
          description: Unathorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unathorized:
                  value: 
                    status: Non puoi bannare utilizzando un altro utente
    delete:
      tags:
        - social_network 
      summary: Unban User
      description: Unban a user
      operationId: unbanUser
      security:
        - BearerAuth: []
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '200':
          description: l'utente con id {id} ha bannato l'utente con id {banid}
          content:
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                OK:
                  value: 
                    status: DELETED
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: Non puoi sbannare 2 volte lo stesso utente
        '403':
          description: Fobidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Fobidden:
                  value: 
                    status: Non puoi sbannare da un account che non ti appartiene
        '404':
          description: Utente non trovato
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: "Utente non trovato"
  
  /comments/{id}:
    parameters:
      - name: id
        in: path
        description: id of the comment that needs to be fetched
        schema:
          type: integer
        required: true
    delete:
      tags:
      - photos
      summary: Delete photo Comment
      description: Delete a comment for a photo
      operationId: uncommentPhoto
      security:
      - BearerAuth: []
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Unauthorized:
                  value:
                    status: Non hai fatto il login
        '500':
            description: errore server
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/generic_response"
                examples:
                  error:
                    value:
                      status: "errore server"
        '200':
          description: il commento con id {id} è stato eliminato
          content:
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                OK:
                  value: 
                    status: DELETED
        '404':
          description: Commento non trovato
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: "Commento non trovato"
        '403':
          description: Fobidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                Fobidden:
                  value: 
                    status: Non puoi cancellare un commento che non ti appartiene
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_response"
              examples:
                error:
                  value:
                    status: "id non valido"
tags:
- name: user_management
  description: "Operations related to username"
- name: feed_stream
  description: Operations related to feed_stream
- name: user_info
  description: Operations related to user
- name: social_network
  description: Operations related to social_network
- name: photos
  description: Operations related to photos

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    photo_object:
      type: object
      description: The photo.
      properties:
        description:
          description: The description of the photo.
          type: string
          minLength: 0
          maxLength: 100
          pattern: "^[a-zA-Z0-9_ !]*$"
          example: Splash
        photo:
          description: The photo itself.
          type: string
          format: binary
          minLength: 1
          maxLength: 10485760
          pattern: "((.|\n)*)"
        title:
          description: The title of the photo.
          type: string
          minLength: 0
          maxLength: 100
          pattern: "^[a-zA-Z0-9_ !]*$"
          example: Parrot
    photo_object_extended:
      type: object
      description: The photo with all datas.
      properties:
        comments:
          description: The number of comments.
          type: number
          example: 0
        created_at:
          description: The date of creation.
          type: string
          format: date-time
          minLength: 20
          maxLength: 20
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          example: 2023-05-23T18:36:02Z
        description:
          description: The description of the photo.
          type: string
          minLength: 0
          maxLength: 100
          pattern: "^[a-zA-Z0-9_ !]*$"
          example: hey
        id:
          description: The id of the photo.
          type: number
          example: 29
        liked:
          description: If the user liked the photo.
          type: boolean
          example: false
        likes:
          description: The number of likes.
          type: number
          example: 0
        photo_url:
          description: The url of the photo.
          type: string
          minLength: 0
          maxLength: 100
          pattern: "^[a-zA-Z0-9_./]*$"
          example: service/api/images/1_1684866962.jpg
        title:
          description: The title of the photo.
          type: string
          minLength: 0
          maxLength: 100
          pattern: "^[a-zA-Z0-9_ !]*$"
          example: ciaoo
        user_id:
          description: The id of the user.
          type: number
          example: 1
        user_name:
          description: The name of the user.
          type: string
          minLength: 0
          maxLength: 100
          pattern: "^[a-zA-Z0-9_ !]*$"
          example: 'Raffaele'
    mini_user_object:
      type: object
      description: The user with few datas.
      properties:
        id:
          description: The id of the user.
          type: number
          example: 1
        name:
          description: The name of the user.
          type: string
          minLength: 1
          maxLength: 100
          pattern: "^[a-zA-Z0-9_ !]*$"
          example: 'Raffaele'
    user_object:
      type: object
      description: The user standard.
      properties:
        banned:
          description: If the user is banned.
          type: boolean
          example: false
        followers:
          description: The number of followers.
          type: number
          example: 0
        following:
          description: The number of following.
          type: number
          example: 0
        id:
          description: The id of the user.
          type: number
          example: 4
        photos:
          description: The number of photos.
          type: number
          example: 0
        user_name:
          description: The name of the user.
          type: string
          minLength: 1
          maxLength: 100
          pattern: "^[a-zA-Z0-9_ !]*$"
          example: Ciao
    follow_object:
      description: The follow object.
      type: object
      properties:
        follower_id:
          description: The id of the follower.
          type: number
          example: 1
        following_id:
          description: The id of the following.
          type: number
          example: 2
    banner_object:
      description: The banner object.
      type: object
      properties:
        banner_id:
          description: The id of the banner.
          type: number
          example: 1
        banned_id:
          description: The id of the banned.
          type: number
          example: 2
    like_object:
      description: The like object.
      type: object
      properties:
        photo_id:
          description: The id of the photo.
          type: number
          example: 29
        user_id:
          description: The id of the user.
          type: number
          example: 1
    comments:
      description: contains an array of comments
      type: object
      properties:
        array_of_comments:
          description: The array of comments.
          type: array
          items:
            $ref: '#/components/schemas/comment_object'
          minItems: 1
          maxItems: 100
    user_object_only_ban_follow:
      type: object
      description: The user with only ban and follow.
      properties:
        banned:
          description: If the user is banned.
          type: boolean
          example: false
        followed:
          description: If the user is followed.
          type: boolean
          example: false
        id:
          description: The id of the user.
          type: number
          example: 1
        user_name:
          description: The name of the user.
          type: string
          minLength: 1
          maxLength: 100
          pattern: "^[a-zA-Z0-9_ !]*$"
          example: Raffaele
    user_name:
      description: The user name.
      type: object
      properties:
        user_name:
          description: The name of the user.
          type: string
          minLength: 0
          maxLength: 100
          pattern: "^[a-zA-Z0-9_ !]*$"
          example: Raffaele
    mini_comment_object:
      description: The simple comment object.
      type: object
      properties:
        content:
          description: The content of the comment.
          type: string
          minLength: 0
          maxLength: 100
          pattern: "^[a-zA-Z0-9_ !]*$"
          example: ma che bella foto!
    comment_object:
      description: The comment object.
      type: object
      properties:
        content:
          description: The content of the comment.
          type: string
          minLength: 1
          maxLength: 100
          pattern: "^[a-zA-Z0-9_ !]*$"
          example: ma che bella foto!
        created_at:
          description: The date of creation.
          type: string
          minLength: 20
          maxLength: 20
          format: date-time
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          example: 2023-05-21T13:38:50Z
        id:
          description: The id of the comment.
          type: number
          example: 3
        photo_id:
          description: The id of the photo.
          type: number
          example: 1
        user_id:
          description: The id of the user.
          type: number
          example: 1
        user_name:
          description: The name of the user.
          type: string
          minLength: 1
          maxLength: 100
          pattern: "^[a-zA-Z0-9_ !]*$"
          example: Raffaele
    photos:
      description: contains an array of photos
      type: object
      properties:
        array_of_photos:
          type: array
          items:
            $ref: "#/components/schemas/photo_object"
          description: An array of photos.
          minItems: 0
          maxItems: 100
    users:
      description: contains an array of users
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/user_object_only_ban_follow"
          description: An array of users.
          minItems: 0
          maxItems: 100 
    generic_response:
      type: object
      description: An object representing a responce status.
      properties:
        status:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ".*"
          description: The status of the request.
          example: "Success"